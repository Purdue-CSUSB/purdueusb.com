let searchData=[{index:1,title:"How do I become an Undergrad&shy;uate Teaching Assistant?",description:"Get paid to help students during labs",url:"/wiki/become-uta",category:"campus",date:"March 4, 2020",content:"The process of the hiring UTAs has been standardized in the Computer Science Department to simplify application evaluation.  Typically, applications for the following semester are opened about a month before classes end.  More information can be found on the Department of Computer Science website.",author:"Noah Alderton"},{index:2,title:"How can I rent equipment?",description:"Borrow equipment to tinker with for free",url:"/wiki/rent-equipment",category:"campus",date:"March 4, 2020",content:"There are a few different opportunities to rent equipment for both classwork and personal use.  The Department of Computer Science allows CS/DS students to rent various equipment online.The following devices are available to rent for 1 week at a time:  SenseHat  Raspberry Pi 3  Particle Photon  Pebble Smartwatch  LittleBits  Myo  LeapMotion  Parrot Rolling Spider MiniDrone  Oculus Rift DK2  HoloLensAdditionally, Purdue Libraries has cameras, camcorders, tripods, and hard drives available to rent for 3 days.To learn more, see the Purdue Libraries Equipment page.",author:"Noah Alderton"},{index:3,title:"Transferring Files via SCP and FileZilla",description:"Copy files to and from Purdue's servers",url:"/wiki/file-transfer",category:"technical",date:"April 1, 2020",content:"IntroductionSometimes there comes a need where you need to transfer a files between your personal computer and one of Purdue\u2019s servers (like data.cs.purdue.edu).  The tutorial will show you how to transfer files between your computer and a remote server (and vice versa) using SCP via command line and FileZilla.  These methods will work on Windows, Mac, and Linux.Solution 1: Command LineStep 1On Windows open \u201cWindows PowerShell.\u201d On Mac or Linux, open your respective Terminal.Step 2In order to transfer your files, we are going to use SCP. SCP works the same regardless of operating system. The SCP program takes the following parameters:scp &lt;source_directory&gt; &lt;destination_directory&gt;For our purposes of transferring homework from data, we are going to use the following command:scp &lt;purdue_username&gt;@data.cs.purdue.edu:&lt;homework_directory&gt; &lt;personal_machine_directory&gt;For example, if I wanted to transfer my hw2.c file to my current directory on my PC, I would run:scp nalderto@data.cs.purdue.edu:~/cs240/hw2/hw2.c .Step 3If everything ran properly, you should be able to access your homework on your personal machine. Keep in mind that this is a\xa0copy\xa0of your homework, so any changes you make on your personal machine will not be reflected on data and vice versa. If we want to transfer a file from our personal machine to data, we would need to run SCP again, flipping the source and destination directories.For example, if I wanted to transfer my hw2.c file from my personal machine to data, I would run:scp hw2.c nalderto@data.cs.purdue.edu:~/cs240/hw2/Solution 2: FileZillaStep 1If you are not comfortable with the command line, there are several graphical user interface programs that are available which provide the same functionality. In this tutorial we are covering FileZilla, as it is compatible with Windows, Mac, and Linux.You can download FileZilla here.Step 2Once you have finished installing FileZilla, open it up. On the top, there should be 4 input boxes. Put in the following information:  Host:\xa0sftp://data.cs.purdue.edu  Username: Purdue Username  Password: Purdue Career Account Password (same password used to SSH into data)  Port: 22Step 3Once the appropriate information is entered, click \u201cQuickconnect\u201d. A dialog might appear about trusting the connect. Go ahead and trust the connection.Step 4You should now be connected to data! Your data filesystem is on the right part of the screen, while your personal computer\u2019s files are on the left. You can drag and drop the files between the machines as you wish!",author:"Noah Alderton"},{index:4,title:"Getting a Lawson Key Fob",description:"Access Lawson after hours",url:"/wiki/lawson-fob",category:"campus",date:"May 9, 2020",content:"As a CS student, you can get a keyfob from the Lawson mailroom which will give you after-hours/weekend access to the Lawson building, as well as the student activities center in HAAS G072.Getting a New KeyfobTo get a keyfob, simply email cs-workstudy@science.purdue.edu. Here\u2019s a template that might be helpful:  Subject: Lawson Keyfob  To whom it may concern,  I am a computer science student enrolled in [CS courses here]. I would like a keyfob to access the Lawson building after-hours.  Thank you, [Your name]Renewing an Existing KeyfobKeyfob access expires every semester. If you don\u2019t renew your keyfob, you won\u2019t be able to get into the building or offices without renewing. To renew your keyfob, simply email cs-workstudy@science.purdue.edu again and request that your fob be renewed. In the email, tell them new CS courses you are enrolled in.",author:"Jay Hankins"},{index:5,title:"SSH Shortcut for Purdue Servers",description:"Tired of typing data.cs.purdue.edu?",url:"/wiki/ssh-shortcut",category:"technical",date:"May 10, 2020",content:"It can be tedious to type ssh &lt;username&gt;@&lt;machine&gt;.cs.purdue.edu over and over again whenever you need to login to a CS machine.Here\u2019s a little shell function which shortens this command to just    with an optional argument of the machine you wish to connect to.InstallationCopy and paste the following code into your shell rc file. This may be ~/.bashrc or ~/.zshrc.&lt;username&gt; () {    ssh &lt;username&gt;@${1:-&lt;default_machine&gt;}.cs.purdue.edu}Make sure to replace any information in between the &lt; and &gt; symbols. For example, my function looks like this:hankinsj () {    ssh hankinsj@${1:-data}.cs.purdue.edu}My username is hankinsj and my default machine is data in this example.Usage$ &lt;username&gt;You can include an optional argument which specifies the machine to connect to. Otherwise, it will connect to your chosen default machine.Example$ hankinsj mc04This will connect me automatically to mc04.cs.purdue.edu.",author:"Jay Hankins"},{index:6,title:"Connecting to Purdue's VPN",description:"Access campus-only resources from anywhere!",url:"/wiki/connect-vpn",category:"technical",date:"May 26, 2020",content:"IntroductionA Virtual Private Networking (VPN) is a method that allows users to securely access an organization\u2019s internal network resources. By using Purdue\u2019s VPN service, you can access resources that are only available on campus anywhere, e.g. printing to any campus printer, remotely accessing Purdue\u2019s servers/UNIX machines (like mc19.cs.purdue.edu) through remote desktop, etc.This tutorial will show you how to connect to Purdue\u2019s VPN using Cisco AnyConnect.Step 1To download Cisco AnyConnect, go to the Purdue Community Hub. After login in, you would want to go to \u201cAntivirus and Security Software\u201d.Step 2Select Cisco AnyConnect for Personally Owned Computers and select the appropriate settings for your computer. After adding the software to your cart, download Cisco AnyConnect.Step 3Once you finished installing Cisco AnyConnect, open it up. You will see that Cisco AnyConnect is ready to connect to the VPN server: webvpn.purdue.edu.There are a couple options you can choose. Due to COVID-19, more people are utilizing Purdue\u2019s VPN services. Purdue has created another VPN server: webvpn2.purdue.edu/ for people to connect to. Whichever VPN server you choose to connect to will work.Step 4After you click \u201cConnect\u201d, a prompt for login in will pop up. Your username is your Purdue username and the password is your BoilerKey password (pin,push).Step 5You should be able to connect to Purdue\u2019s VPN server! A pop-up will notify you that you are connected. Another way to tell is to check is on the task/menu bar. From the picture below, the lock symbol signifies that you are connected.Step 6After using Purdue\u2019s VPN, you want to disconnect. On Windows, right click on the Cisco AnyConnect icon, and click \u201cDisconnect\u201d. On Mac, to disconnect, click on the Cisco AnyConnect icon from the menu bar and select \u201cDisconnect\u201d.",author:"Cindy Ding"},{index:7,title:"Subscribing to the Purdue CS Calendar",description:"Get notified of CS Department events on your calendar",url:"/wiki/cs-calendars",category:"calendar, events",date:"June 28, 2020",content:"Below are links you can use to sync the Purdue Computer Science calendars using your preferred calendar app. The CS department switched to Google Calendar just for you! :tada:Note: We recommend subsribing to the Google Calendar link. Downloadable calendars do not update automatically.Departmental events, such as Town Hall or career workshops:  Google Calendar Embed  Webcal  iCalendar (.ics)Corporate events, such as recruiting days:  Google Calendar Embed  Webcal  iCalendar (.ics)CS seminars &amp; colloquiums:  Google Calendar Embed  Webcal  iCalendar (.ics)Student organization events:  Google Calendar Embed  Webcal  iCalendar (.ics)",author:"Tyler Hoffman"},{index:8,title:"Optimize your search on our wiki",description:"Save yourself some time!",url:"/wiki/searching-our-wiki",category:"meta",date:"June 29, 2020",content:"Our wiki is built with tools make your searches more powerful and precise. You can use any combination of the operators explained below:WildcardsWildcards let you match any text and are represented by asterisks (*). For example, C* S* matches words starting with C or S. Together they match phrases like Computer Science or Canadian Studies, among other things.FieldsFields relate to meta-information about our articles, such as the date or author. You can use them to search only titles, for example, instead of searching the entire wiki. Search for this article with title:optimize.Available fields: title, description, content, author, category, and date.BoostsYou can use boosts to prioritize certain search terms over others. For example, foo^10 bar tells the website you\u2019re 10x more interested in the search term foo than bar. Articles containing foo would then be higher in the search results.Fuzzy MatchesFuzzy matching allows for some grace if you misspell a term or are off by a few letters. For example, foo~1 matches anything 1 letter away from foo, like boo or food. It will not match words like boot because it has a difference of two letters.Term PresenceTerm presence allows you to explicitly include or exclude phrases in your search query with the symbols + and -, respectively. For example, +foo -bar baz matches only content with foo and without bar, that also may contain baz.By default, a result comes back if any word separated by a space matches some content. This is a limitation of the code our website uses. Searching for +author:Purdue Pete is seen as two separate terms, +author:Purdue and Pete.Nothing\u2019s perfect.Bringing It All TogetherYou can make your search as simple or as complex as you\u2019d like. As an example, if I wanted to search for meta-articles I\u2019ve authored in June, containing the mis-spelled phrase crakatoa, I could type category:meta +author:Zach +Bryant +date:June -crakatoa~1. Except at this time, my only article contains the phrase krakatoa.Thank you for coming to my TED talk.",author:"Zach Bryant"},{index:9,title:"How to Join USB",description:"Want to lead cool initiatives like this student wiki?",url:"/wiki/joining-usb",category:"clubs",date:"August 24, 2020",content:"What is USB?Established in 1999, The Computer Science Undergraduate Student Board is dedicated to improving the student experience within Computer and Data Sciences at Purdue- whether by managing CS193, hosting forums for student advocacy, or maintaining a database of undergrad-tailored resources, USB is continually creating initiatives that will uphold our values. Check out our initiatives page to see what we\u2019re up to now!What do USB members do?That will be completely up to you! USB prides itself in being driven by student-led initiatives- if a board member has an idea and a plan, they are encouraged to take lead. Initiatives can be small or large, and members are given flexibility to be able to move from project to project if it\u2019s in their best interest.What are the responsibilities of USB members?All USB members are expected to be working on at least one initiative- this can mean being the member of an initiative team or being the lead of an initiative with heightened responsibility. Along with work on your initiatives, USB has a mandatory hour-long weekly meeting where initiative leads can report their progress and members can discuss any new ideas or suggestions.How to JoinUSB opens applications early December and keeps them open until the beginning of Spring semester. If you follow us on social media (such as our Facebook or Instagram), you\u2019ll be the first to know when it releases!What\u2019s the application process?Our interview can be split up into 2 main parts.-Our general application is released early December and stays open until the beginning of Spring semester. It is made up of personal and behavioral questions about yourself. We\u2019re not looking for the longest response (although details, if important, can definitely add to your application)- we want to see what you\u2019re passionate about. If possible, give us a specific situation that or personal experience relates to the question.-Final interview offers will be sent out within the next two weeks. After scheduling your interview, we will invite you to either an in-person or virtual interview. You will be able to sit with two interviewers and answer some more personal and behavioral questions. Again, we want to know about you- sharing personal, specific experiences will allow us to get to know you better! During the second half of your interview you will be given a \u2018situation\u2019 question where you\u2019re encouraged to share an idea or initiative you have for the CS department and how you would lead it.Traditionally, we have had a third optional event with all candidates that made it to the final round of interviews- in the past, we have invited candidates to bowl with us and have dinner. The purpose of this optional meeting is to be able to meet all candidates in a relaxed setting and to get to know you more personally. Since this event is optional, we do not use it as a definitive way to consider candidates, but it (if anything) gives an excuse to have some fun and free food!What are we looking for?USB cares about diversity. The computer science department heavily lacks diversity and we believe that the best way for a student organization to address this is to amplify and elevate the voice of minority groups in tech. We want our board to be representative of the diverse community we are trying to build.USB is also looking for passion and great ideas for the CS department. Initiatives are completely maintained and created by USB members, so we want to find individuals who truly care about the work they will do with us. We love to talk with candidates who have genuine interest or a specific experience that is driving their idea- maybe a love for teaching that has given them an idea for a mentorship initiative, or an experience in class that made them realize there was an easier way to hold PSOs.I believe in what USB is doing but do not want to become a member. Can I still make changes within the CS department?You definitely can! While USB provides existing relationships with faculty and a network of supportive members who can help start your initiative, it is by no means the only way to do so. If you have an idea for the CS department, take initiative and contact your professors, faculty members, and your peers. Conduct some research and form a plan- change can absolutely come from an individual. And USB is more than willing to help- if you feel stuck, don\u2019t hesitate to come to our scheduled office hours or send us an email about your idea and we will share any helpful resources we have!",author:"Lauren Lum"},{index:10,title:"Contribute to the Wiki",description:"Add or edit an article on the Student Wiki",url:"/wiki/make-article",category:"campus",date:"October 28, 2020",content:"IntroductionThe Student Wiki is designed to be a source of information that is useful for the Purdue CS/DS community.  We encourage anyone to create a new article for the Wiki or edit a preexisting article.  We only ask that new articles are tangentially useful to the CS/DS community.  We are using GitHub as the means of managing edits to the Student Wiki.  Therefore, to contribute to the Student Wiki, you must have a GitHub accountCreate a New ArticleStep 1First, you need to fork the purdueusb.com website repository.  This can be done by going to the GitHub repository page, and click the \u201cFork\u201d button on the top right.Step 2Once you are in your fork of the Purdue USB website repository, navigate to the _wiki directory.Step 3Next, click \u201cAdd file\u201d on the top right, then click \u201cCreate new file\u201d.Step 4From here you are going to create a Markdown file for your article.  If you are not familiar with Markdown, please read through this guide.The name of your Markdown file\u2019s name should be no more that 3 words long, with dashes (-) separating the words.  The file should always end in the .md file extension.  The filename will be the URL slug, so lawson-fob.md becomes /wiki/lawson-fob.To maintain format consistency, please do not use h1 (#) or h2 (##) headings.You can also use emojis seen on this cheat sheet! :bangbang:The beginning of your Markdown file should begin with \u201cfront matter.\u201d  This is metadata that is used by Jekyll to better organize your article.  This is an example of front matter.---title:  &quot;Contribute to the Wiki&quot;description: &quot;Add or edit an article on the Student Wiki&quot;author: Noah Aldertondate:   2020-10-28 12:00:00 -0400categories: campus---  title: Title of the article  description: Describe what the article is about. Keep this down to one sentence.  author: List of author names exactly as they appear in membership data files.  date: Date of most recent edit  categories: Category this fits the article, like technical or campus. Multiple categories can be included, as long as they are comma separated and between square brackets.A note about images: Please only use images hosted by USB - not from an outside source. In addition, use descriptive and readable captions for wiki images, as they will be displayed to the user and read aloud via screen readers.  Add images to a directory in /assets/images/wiki/&lt;article-name&gt;.  From there, will be able to reference local images in your article like so:![Community Hub Homepage](/assets/images/wiki/connect-vpn/step1.png)Step 5Once you are finished typing up your article, add a commit message, and click the green \u201cCommit new file\u201d button on the bottom.Step 6Now, you need to go to the \u201cPull requests\u201d tab, and click the green \u201cNew pull request\u201d button.  Here, you are going to create a new pull request that merges your fork of the website into the Purdue-CSUSB/purdueusb.com repo.Edit Existing ArticleStep 1Navigate to the _wiki directory and open the Markdown file that you wish to edit.Step 2Click the edit button on the top right.  This will make a fork of the website repository.  From here you can the desired changes to the wiki article.  If you are not familiar with Markdown, please read through [this guide].  Also, please do not use h1 (#) or h2 (##) headings in an effort to maintain format consistency across the articles.Step 3Once you are finished making those edits, add a commit message, and click the green \u201cCommit changes\u201d button on the bottom.Step 4Now, you need to go to the \u201cPull requests\u201d tab, and click the green \u201cNew pull request\u201d button.  Here, you are going to create a new pull request that merges your fork of the website into the Purdue-CSUSB/purdueusb.com repo.",author:"Noah Alderton"},{index:11,title:"Fun/Interesting Classes at Purdue",description:"Take a break from your required classes!",url:"/wiki/fun-courses",category:"curriculum",date:"November 3, 2020",content:"I have space in my schedule; what should I do?First and foremost- take classes that interest you! Purdue offers a broad spectrum of classes that exist outside of the requirements for your degree. In order to look for all available classes, go to mypurdue.purdue.edu and click on the Registration tab. In the Register for Classes category, click on Look up Classes. In this search tool, choose the term you are looking for and start looking through classes that might interest you.Need suggestions? Below is a compiled list of fun/interesting classes categorized by topic. Note that course numbers might have changed since this article was written.Art/DesignAD 242: Ceramics IIntroductory ceramics class. Note there is an extra fee for this class.HORT 270: Floral Design &amp; Inter Plt MgmtClass on flower arrangement and designs with flowers. Note there is an extra fee for this class.MUS 250: Music AppreciationNo musical background needed- learn more about the fundamentals of music and listen to important musical compositions.AD 255: Art AppreciationNo artistic background needed- learn more about the fundamentals of art and view art in galleries and in your community.Sports/ActivityPES 115: Bowling (Indv Dual Mvmt Frm I)Bowling class where you can bowl in the Purdue Memorial Union! Note there is an extra fee for this class.Behavioral ScienceSOC 100: Intro SociologyCourse covering introductory topics in sociology.Earth and Planetary SciencesEAPS 106: Geosciences in the CinemaThis class explores geology and natural disasters in respect to science fiction movies. This class is known to have some of the most interesting/entertaining lectures!EAPS 104: OceanographyIntroductory course on ocean life, ocean ecosystems, and natural processes in the ocean.EAPS 100: Planet EarthIntroductory course on Earth\u2019s natural processes.OutreachCS 39000SL: MAGIC (Service Learning Outreach)One credit course where students start programs and initiatives at local high schools in order to introduce girls to computer science. Learn more here!EPICSEPICS is a service-learning design program in which teams of students partner with local and global community organizations to address human, community, and environmental needs. To view the different options for EPICS courses, look for courses that start with EPCS. Learn more here!HistoryHIST 371: Society &amp; Rock &amp; RollExamines post-WWII America and its relation to music, specifically rock and roll.Honors CoursesThere is a misconception that you need to be in the Honors College to take HONR courses. All you need is to have a minimum of a 3.0 GPA in order to enroll in HONR courses, check with your primary advisor about how to sign up for HONR courses. There are some (i.e. HONR 19901 and HONR 19902 that are restricted to first-year honors students).HONR 29900: Visiting Scholars SeminarOne credit course where students attend events (currently virtual due to COVID-19) with visiting scholars and engage with their work. Every semester, the Honors College hosts a range of visitors from across disciplines.HONR 29900: Honors College Study Away ProgramsStudy Away programs are a great way to learn about different communities, cultures, and socio-economic and technical issues in a variety of settings. They are offered during October break, spring break, Maymesters, and over the summer. Study Away programs are a great way to gain some experience abroad in a busy schedule. Some Study Away programs may also be a great way to fulfill your Great Issues requirement, check with your primary advisor about which ones. Learn more here!Grade OptionsWant to take a course you\u2019re interested in but don\u2019t want it to count towards your GPA? Students also have the opportunity to change the grade mode for some classes to Pass/No Pass. In this grade mode, your final grade will be either P (Pass) or NP (No Pass). This grade will not impact your GPA. Note that if you change a grade mode for a certain class, this class will not count toward your degree requirements even if you get a P. The amount of credits of a P/NP class, however, counts towards your overall credit rank- for example, if you\u2019re taking five classes that are each three credits and one class has the P/NP grade mode, you are still a 15 credit student. To fully understand if you can change a course to P/NP and how it will impact your progression in your degree, discuss this option more with your advisor.",author:"Lauren Lum"},{index:12,title:"Connecting to PAL3.0 on Linux",description:"Access campus-only resources from anywhere!",url:"/wiki/connect-pal3.0-linux",category:"campus, technical",date:"November 21, 2020",content:"IntroductionPAL3.0 is Purdue\u2019s wireless network. It uses WPA2 Enterprise authentication, which means additional configurations may be needed to connect to it on Linux.This tutorial will show you how to connect to PAL3.0 on desktop Linux. Note: Screenshots below show the GNOME 3 desktop environment. The process should be very similar to other environments.Step 1Open Wi-Fi settings, and select PAL3.0 in the list of available wireless networks.Step 2Change the following settings:  Set \u201cAuthentication\u201d to Protected EAP (PEAP)  Select No CA certificate is requiredAfter changing these settings, your options page should look like this:Step 3Enter your Purdue username (without \u201c@purdue.edu\u201d) and password (regular password, NOT BoilerKey), then click \u201cConnect.\u201dStep 4You should be connected to PAL3.0 in a few seconds! Check the Wi-Fi symbol on the top bar/panel to see if you\u2019re connected.",author:"Chris Xiao"},{index:13,title:"Github Pages Guide",description:"Create a personal website hosted and deployed by Github!",url:"/wiki/gh-pages",category:"technical",date:"February 28, 2021",content:"What is Github Pages?Github Pages allows you to easily host and publish a webpage through Github. To start, all you need is a Github account!How Can I Set Up my GH Page?Set up a basic webpage by completing the following steps!  Create a new repository  Push your first file to the repository\u2019s main branch. You can use our template file by saving as a markdown file (using the file extension .md)  Click on the settings tab in your repository menu  Scroll down to the section called GitHub Pages  Change the Source setting to the option called main branch and click save  At this point, you can visit https://      .github.io// to view the website you just activated.  Congrats! Your webpage has been deployed successfully!Editing my PageAny edits to your repository should automatically reflect onto your deployed Github Page, although your changes may not load immediately. If you do not see any changes, hit CTRL + SHIFT + R (or \u2318 + SHIFT + R on macs).If you want to continue to edit your page using Markdown (which is what index.md is using), check out this markdown guideWant some inspiration on what to do with your new website and lots of cool free stuff? Take advantage of Github\u2019s Student Developer Pack! To do this, navigate to the Github Student website and follow the steps there to request access.",author:"CS193 Team"},{index:14,title:"Terminal cheatsheet",description:"Learn some important UNIX commands",url:"/wiki/terminal-cheatsheet",category:"technical",date:"March 14, 2021",content:"Basic UNIX Terminal Guidepwd (Print Working Directory)DescriptionPrints path of current directory. (Think: what is the address of the folder I\u2019m viewing?)Examplepwdls (List)DescriptionPrints contents of current directory. (What stuff is in the current folder?)Tags      -a = all files (include hidden files)        -l = detailed list  ArgumentsPath to the folder you want to see the contents of (Leave blank to see current folder contents)Examplels -alcd (Change Directory)DescriptionMove to the specified path. (I want to go somewhere, and I need to tell the terminal where.ArgumentsExact path of the folder you want to move to, or just a subdirectorySyntaxcd DirectoryExamplecd ~/Documentsrm (Remove)DescriptionPermanently deletes a file or folder (No trash/recycling bin!)Tags      -r - Delete a folder and its contents        -f - Stop confirmation prompt for write-protected files  ArgumentsPath to the folder/file you want to deleteSyntaxrm [TAGS] PathExamplerm -rf ~/Documents/Junkmv (Move)DescriptionMove an existing file somewhere else.  It can also be used to rename files.Arguments      The file you want to move        The destination  Examplemv ~/Documents/source/file.txt ~/Documents/destination/file.txtmv ~/old_name.txt ~/new_name.txtcp (Copy)DescriptionCopy files or folders to a new locationSyntaxcp Source Destinationcp File-1 File-2 File-3 ... DestinationExamplecp ~/Documents/source/file.txt ~/Documents/destination/file.txtcp ~/Desktop/Name.java ~/Desktop/Age.java ~/CS180/Homework_1clearDescriptionClear the Terminal ScreenExample$ cleartopDescriptionSee what programs are currently runningExampletopkillallDescriptionKill all programs with the specified program_nameSyntaxkillall Program_NameExamplekillall firefoxtouchDescriptionCreates a new file in the location specified in the argumentArgumentsThe files that are to be createdSyntaxtouch File-1 File-2 File-3 ...Exampletouch ~/Documents/file1.txt ~/CS193/HW2/file2.txtOther ContentsFiles and Folders with SpacesIf a path includes files or folders with spaces, either use quotations marks (\u201c \u201c) or a backslash () before the space.  For example:~/&quot;My Files&quot;/test.txtor~/My Files/test.textShortcuts      ~ - Home Directory        . - Current Directory        .. - Parent Directory  Aliases      Aliases are set in ~/.bashrc        Add a line to ~/.bashrc that looks like: alias &lt;shortcut&gt;=\u201c&lt;command&gt;\u201d        Save file, tell bash to reload: $ source ~/.bashrc  WildcardsDescriptionUsed to include a group of files with smiliar characteristics.They can be used with nearly any UNIX command.Example      cp ~/Desktop/*.java ~/Documents/Project          This command will copy all .java files found in the Desktop directory into the Documents/Project folder.            mv ~/Desktop/file* ~/Documents          This command will copy all files that begin with \u201cfile\u201d in the name into the Documents directory.      Vim and Nano CustomizationFrom Lecture 2, you should have learned about how Vim enables commands by typing colon \u201c:\u201d followed by your command. However, there are some commands you don\u2019t want to have to type every time. For example, it\u2019s pretty normal to want line numbers whenever you open a file. But having to type :set number every time you run Vim kinda sucks. How can we avoid this?Your ~/.vimrc (Vim Run Control) file controls what commands will run every time Vim is invoked. You can customize it to your heart\u2019s content.You can disable this at any time within a file by typing :set nonumber within Vim, or by deleting it from your ~/.vimrc and then re-opening Vim again.As you can imagine, there are thousands of commands you can leverage in your ~/.vimrc file. For a great resource on customization, read this article.A favorite quote from that article that you should definitely adhere to is:  \u201cDon\u2019t put any lines in your vimrc that you don\u2019t understand.\u201dFor those who are using nano, here is an article about nano customization. Similar to Vim, you add your commands in your ~/.nanorc file.",author:"CS193 Team"},{index:15,title:"Using Terminal",description:"Learn how to efficiently use terminal",url:"/wiki/terminal",category:"technical",date:"March 14, 2021",
content:"What is Terminal?When you use the terminal, you talk more directly with your computer. Think of it as a more powerful (but less friendly) finder/file explorer.Why Use Terminal?There are many benefits of using Terminal! Here are some important points:  Accessibility to programmers - with terminal, you can do important things like compile source code, access other computers, and launch programs without having to open up any other programs  Versatility + Customizability - Say you want to move all files that start with \u2018cool\u2019 and end with \u2018.gif\u2019 into a folder called \u2018cool gifs\u2019. With terminal, this is one command!  Purdue CS and terminal - Most courses will have projects/tests/homeworks that assume terminal knowledgeHow Do I Open a Terminal Window?There are lots of options for Windows and Mac computers to open a terminal window! For Windows, you can open the Command Prompt program to open a terminal window and the equivalent program on Mac is Terminal. Alternatively, there are many other programs you can download such as Git Bash, which gives you a Bash terminal with extra Git functionalities.Now What?For many, the interface of a terminal window can be confusing at first. To utilize terminal, you must type in UNIX commands. Remember that when you\u2019re moving around in terminal, you are essentially \u2018clicking\u2019 folders and files like you would in File Explorer/Finder. The way you\u2019ll be interacting with terminal is by giving it commands. Here\u2019s the basic structure of Linux commands:It\u2019ll be helpful to get comfortable with moving around with terminal before learning more difficult actions. Here\u2019s some important commands to help you get comfortable with navigating with terminal:More CommandsAs mentioned before, one of the important benefits of using terminal is that it gives you a lot of flexibility and options- that means there are way too many available commands to talk about in this article! To get started, check out our terminal guide that\u2019ll give you some of the important UNIX commands. You can find another helpful guide here or check out our terminal cheatsheet hereIf you want more information about a command, use the command man      to get more information about any given command. For example, man ls gives you info about the ls command.",author:"CS193 Team"},{index:16,title:"Cloning a Github Repository with Intellij",description:"Learn how to use IntelliJ to clone a git repository and track your changes",url:"/wiki/git-and-intellij",category:"technical",date:"March 26, 2021",content:"In this tutorial, we will be cloning a Github Repository into our local machine using IntelliJ and practicing committing and pushing our changes. To recap:Our Github Repository is the code hosted on Github. Our local machine is the computer/device you are going to be editing the code on.The changes made on your local machine will not be sent to our github repository until they are committed and pushed.Step 1: Clone this repositoryOur first step is to clone a Github Repository onto our local machineHow to clone remote repo to local repo and manage it with IntelliJ  Close any projects you currently have openFile -&gt; Close ProjectYou should now see the main IntelliJ screen (It looks like the picture below).  Checkout a project from Version Control.  This is done from the welcome screen in Intellij!Click Check out from Version Control -&gt; Git -&gt; Log in to GitHub...The URL is asking for the HTTPS clone link. You can access this link if you go to the repository you\u2019re trying to open with Intellij, click on the green \u2018Code\u2019 button on the top right, and then copying the HTTPS link.The Directory is where this project will be stored on YOUR computer. Specify where in your computer you\u2019d like the project to be saved.      Click \u2018Clone\u2019        Enter your GitHub credentials if asked for. (Note: The order of steps 3 and 4 might be flipped)    Confirm checkout from version control. Click \u2018yes\u2019      IntelliJ will now ask you if you want to customize setup or rely on the default. You can just click \u2018Yes\u2019 or \u2018Confirm\u2019 on the screens that follow        You\u2019ve successfully cloned your git repository onto your computer (and opened it in Intellij)!  You should see the files from your git repository on your Intellij window now. Remember, we have just cloned your git repository- all changes you make to these Intellij files will STAY on your local machine unless you push them to the central repository in Github. In other words, if you change a file from your new cloned repository on IntelliJ and save that file, you will NOT see your changes if you check your Github repository online. To learn how to commit and push your changes, move on to the next step!Step 2: Push your changes to GitHub!After you make new changes, you must commit and push them so your Github repository will be updated. You can find Intellij\u2019s Git options on the top right of the window. Depending on which IntelliJ version you have, the icons could appear differently.  Commit and push your changes. Note: Depending on version, the pull and commit may look like blue and green arrows instead.Only selecting \u2018Commit\u2019 will NOT push you changes to your Github repository!  Confirm you\u2019d like to push changes",author:"CS193 Team"},{index:17,title:"Git Guide",description:"Get good with the git guide",url:"/wiki/git-intro",category:"technical",date:"March 26, 2021",content:"What\u2019s a VCS?VCS stands for Version Control System. You can think about it like Google Docs, but for code. Unlike Google Docs, though, it tracks every change you make! VCS\u2019s are used to help manage multiple developers working on the same project, among their many other benefits. There are many VCS\u2019s available for you to use, but in this article we\u2019ll be focusing on Git.Why use a VCS?There are many reasons to use a VCS, and here are just a few:  With a VCS, you can avoid losing work because of a crash or deleting a file that you didn\u2019t mean to; you can revert your code back to when it was working  Many CS classes at Purdue require knowledge of a VCS (and of these classes, most use Git)  It\u2019s the most common way to collaborate with code  Most companies will expect you to be able to use a VCS  And even if you just learn Git, the skills you learn will be transferable to other VCS\u2019s you might have to useGitTo start using git, you must first create a repository. A repository is a folder with git functionality (it has version control now). You have to initialize git so that it\u2019ll start keeping track of everything for you. Git keeps track of things in a hidden \u201c.git\u201d folder within the repository folder. Git\u2019s like a program that goes in your folder and starts tracking everything you do.This repository on your local computer will be used to track and push changes to a central repo. If you are familiar with Github, this is the central repository hosted on Github. This central repository is the place where all collaborators can push their changes to and share with others. Think of it like a folder in Google Drive, but for holding code, not documents.So how do you push the changes you made in your local repository (that lives on your own computer) to the central repository (that your collaborators can use and see)? The basic git workflow is the following:  Change all the files you want  ADD your changes  COMMIT the files you added  PUSH your commitTo clarify these terms:  Adding a file means that you want git to pay attention to that file. You\u2019re adding that file to a list to be committed- during your next commit, the files you added will be included. Once you commit, all files are un-added and you must re-add them to include them in the next commit.  Committing means that you want git to save your changes to the files you previously added. A commit represents all the changes to the added files- this means it includes edits, additions, and deletions of files. Once something\u2019s committed, you can always go back to that commit at any time in the future.  Pushing is when you push all commits that haven\u2019t already been pushed to your central repository. Pushing is what actually updates your central repository, letting your collaborators view your changes.Helpful Git Commands",author:"CS193 Team"},{index:18,title:"LaTeX Guide",description:"Learn important LaTeX commands",url:"/wiki/latex-guide",category:"technical",date:"March 26, 2021",content:"Preamble  documentclass{article} specifies the type of document that is going to be created.  The area between the documentclass{...} and the \begin{document} is know as the preamble.  In this case, it is article, which is used of scientific journals, presentations, short reports, etc.  Other document types are shown in the table below:            Document Class      Purpose                  article      Articles in scientific journals, presentations, short reports, program documentation, invitations, \u2026              report      Longer reports containing several chapters, small books, thesis, \u2026              book      Real books.              slides      Slides with big sans serif letters.              letter      Writing letters            The top matter includes the title, author, and date.  These fields are used to store information about the document.  This is useful for allowing LaTeX to automatically generate a title header for your document.        \begin{document} and end{document} is where all the document contents are located.  The information you type into your document will be stored between these two tags.  Title  maketitle creates a title for document with the project title, author name, and date.SectionsThere are several types of section headers to choose from.  Replace the \u201c\u2026\u201d with your desired section title.  section{...}  subsection{...}  subsubsection{...}  paragraph{...}  subparagraph{...}",author:"CS193 Team"},{index:19,title:"Getting Started with LaTeX",description:"Learn how to get started with LaTeX and Overleaf",url:"/wiki/latex-start",category:"technical",date:"March 26, 2021",content:"What is LaTeX?LaTeX (pronounced \u201cLay Tech\u201d or \u201cLah Tech\u201d) is a way of creating documents, just like Microsoft Word or Google Docs.  The difference is that document content and formatting are written in plain text, as opposed to showing you the formatting of the document as you type it.  LaTeX is widely used in academia.  Chances are that your math exams are written in LaTeX.  This is due to LaTeX being great for mathematical expressions.  While it might be intimidating at first, once you become familiar with it, you can create fully customized professional documents even quicker than Word or Docs.Why am I learning this?Learning CS and DS is not just learning how to code.  There is a decent amount of theory and mathematics.  You will take courses like CS 182 and CS 381 that are will require you to turn in mathematical write-ups, like proofs.  Lots of statistics professors want you to type your homework, as well.  LaTeX is useful in these cases.  Also, technical research papers you might write in the future will likely be written in LaTeX.What is Overleaf?You can think of Overleaf as the equivalent of Google Docs for LaTeX.  It allows for documents to be created online and edited by multiple collaborators.Step 1: Create an Overleaf accountPurdue provides you with a free Professional Overleaf account ($30/month value).  This gives you benefits like full document history, syncing with Dropbox/Github, and unlimited collaborators per project.Be sure to use your Purdue email to receive Professional account benefitsClick here to create an Overleaf AccountStep 2: Creating your first document  Verify your account via email  Click the Project button on the top right corner  Click the \u201cCreate First Project\u201d button, and select \u201cBlank Project.\u201dStep 3: Your first compile!As you might have noticed, LaTeX has a lot in common with programming languages.  Like Java or C, LaTeX needs to be compiled before you can see changes in your document.  Change the author from your Purdue username to your full name, and click the big green \u201cRecompile\u201d button.  This should update the document that is shown to the right.  Clicking the arrow on the \u201cRecompile\u201d button gives you the option to automatically recompile between changes.  You can enable this, if you so choose.Step 4: Edit!Congrats, you\u2019ve created your first document on Overleaf! Now all you have to do is start writing. LaTeX is very powerful, so much that our wiki can only cover a very small percentage of what it has to offer- if you want to get a good starting point, though, head over to our LaTeX guide here.",author:"CS193 Team"},{index:20,title:"It's Spring Semester \u2013\xa0What do I do with my summer?",description:"Looking last minute for a summer opportunity?",url:"/wiki/summer-plans",category:"research, internship",date:"April 27, 2022",content:"It\u2019s spring semester, and I am still searching for sort of technical experience for the summer. What should I do?Important note \u2013\xa0a \u201cproductive\u201d summer doesn\u2019t have to involve an internship or technical work! But for someone who\u2019s still searching for a summer resume-building activity in the Spring semester, there are opportunities (many of which are offered by Purdue) that still available.Finding a Summer InternshipThe myCCO (Center for Career Opportunities) Website (link)The CCO doesn\u2019t always have CS/DS specific resources and opportunities, but it is the best place to find centralized job listings.Tips for optimal job search using the myCCO job search tool:  Filter job results by \u201cPosted In Last 24 Hours\u201d. Most companies post job listings and collect applicants within a span of few days, so finding newly posted listings gives you a better chance of hearing a response.  Search jobs by \u201cDesired Majors\u201d rather than \u201cJob Function\u201d \u2013\xa0some roles may sound non-technical at first.Spring Career Fairs &amp; Company DaysEvery spring semester, Purdue has a \u201cJust In Time\u201d career fair. These companies are looking to fill positions right away, and many are looking for CS/DS students. The CCO also hosts career fairs in the spring.Attend as many spring company days as possible. Company days have lower attendance in spring semesters than in fall semesters \u2013\u2013 attending them is a great opportunity to get more 1-on-1 time with recruiters or company representatives. Look out for notifications about company days in the Opportunity Update that is sent out to CS/DS majors!Research OpportunitiesMany students are interested in research, but are unsure about how to get started. The summer is a great time to explore research.390 Research CoursesSome 390s are course numbers for research work. Once you have contacted a professor or lab and been invited to do research work, you can arrange to enroll in a 390 course during the summer term. More on finding labs with open positions below.CS 390sIf you are enrolled in a CS or DS course, chances are your professor either is involved in research, or knows another professor who is doing research. Talking with your professors about their research work and asking if they have openings for you to get involved is a great way to get your foot in the door.If talking with professors in person sounds daunting, the CS Department Website has a compiled list of research areas and descriptions, the labs and professors doing research in each area, and contact information. Reach out using the contact information from these listings. Link here.Other Department 390sYou don\u2019t have to limit your research search to the CS department. Many other departments are looking for CS/DS students, and even if they have not specifically posted an opening for a CS student, it is likely that they could benefit from taking on someone with technical skills.The Pyschology Department, for example, has research opportunities listed on this website.EPICS, VIP, and other structured programsThere are structured Purdue programs where you can do technical projects and research as well.EPICSEPICS is a service-learning design program for Engineering Students that is also open to Computer Science and Data Science majors. There are several teams that work in various fields \u2013\xa0each team works with a partner in the community and develops a product to address the partner\u2019s needs. To see a list of EPICS teams and their current work, visit the EPICS website here.You can enroll in EPICS as a course during the summer term. For more information on how to join, visit the EPICS Registration Information page.VIP (Vertically Integrated Projects)VIP is a program that provides opportunities to do research and design projects related to active research areas of Purdue faculty members. Many of the teams\u2019 work/research is focused on Data Science and Computer Science.You can enroll in VIP as a summer term course For more information on the current teams and information on enrolling in the VIP program, visit the VIP website.REUS (Research Experience for Undergraduates) in Computer and Information Science and EngineeringREUs are summer research programs for undergraduates studying science, engineering, or mathematics. The programs are sponsored by the National Science Foundation, and are hosted in various universities.See the full list of programs on the NSF website.",author:"Sarah Thomas/USB"},{index:21,title:"USB's Current Constitution",description:"USB's Constitution",url:"/wiki/usb-constitution",category:"campus",date:"May 25, 2022",content:"  ",author:"Cindy Ding"},{index:22,title:"CS Course Reflections",description:"Past students' feedback on CS courses at Purdue",url:"/wiki/cs-course-reflections",category:"campus",date:"June 1, 2022",content:"  Here\u2019s the link to the documentWant to contribute to our wiki? Fill out this form",author:"Caleb Ahn"},{index:23,title:"Help Room Information",description:"Extra help for CS 193, CS 180, CS 182, CS 240",url:"/wiki/help-room",category:"tutor",date:"October 7, 2022",content:"USB Help Room has started for the Spring 2023 semester!If you have used the Help Room\u2019s services this past semester, please take some time to fill out this feedback form so that we can continue to improve.The Help Room schedule for 2023 can be found here. Use the different sheets to view tutors by course and links to each tutor\u2019s individual Zoom meeting room.You can also view the schedule below:  ",author:"Arya Sharma"}];